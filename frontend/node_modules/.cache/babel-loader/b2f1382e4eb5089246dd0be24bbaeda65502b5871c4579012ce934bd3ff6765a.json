{"ast":null,"code":"import useFetchData from '../customhook/userDataFetch';\nimport Loader from '../components/loader';\nimport CustomButton from '../components/customButton';\nimport Header from '../components/header';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  // const { data, loading, error, refresh } = useFetchData('/api/users');\n\n  // if (loading) return <Loader />;\n  // if (error) return <div>Error: {error}</div>;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useFetchData","Loader","CustomButton","Header","Fragment","_Fragment","jsxDEV","_jsxDEV","Home","_c","$RefreshReg$"],"sources":["D:/Bhavu/Node js/Mern Crud/frontend/src/pages/home.jsx"],"sourcesContent":["import useFetchData from '../customhook/userDataFetch';\r\nimport Loader from '../components/loader';\r\nimport CustomButton from '../components/customButton';\r\nimport Header from '../components/header';\r\n\r\nconst Home = () => {\r\n    // const { data, loading, error, refresh } = useFetchData('/api/users');\r\n\r\n    // if (loading) return <Loader />;\r\n    // if (error) return <div>Error: {error}</div>;\r\n\r\n    return (\r\n        <>\r\n\r\n            {/* {data.map(user => (\r\n                <div key={user._id}>\r\n                    {user.name}\r\n                    <CustomButton onClick={() => console.log(user._id)}>Edit</CustomButton>\r\n                </div>\r\n            ))} */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,6BAA6B;AACtD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACf;;EAEA;EACA;;EAEA,oBACID,OAAA,CAAAF,SAAA,mBAQE,CAAC;AAEX,CAAC;AAACI,EAAA,GAjBID,IAAI;AAmBV,eAAeA,IAAI;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}